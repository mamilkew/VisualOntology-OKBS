# Generated by Django 2.1 on 2018-08-12 14:48

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_path', models.URLField(max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Forcegraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(max_length=200)),
                ('source', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('domain_subject', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='repository_query', chained_model_field='repository_query', on_delete=django.db.models.deletion.CASCADE, to='page.Domain')),
            ],
            options={
                'verbose_name': 'Graph Node-Link',
                'verbose_name_plural': 'Graph Node-Links',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_path', models.URLField(max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('domain_prop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='page.Domain')),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo_name', models.CharField(max_length=200)),
                ('query_path', models.URLField(max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'My Repository',
                'verbose_name_plural': 'My Repositories',
            },
        ),
        migrations.CreateModel(
            name='Timelinegraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(max_length=200)),
                ('source', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('date_marked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.Property')),
                ('domain_subject', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='repository_query', chained_model_field='repository_query', on_delete=django.db.models.deletion.CASCADE, to='page.Domain')),
                ('faceted_search', models.ManyToManyField(related_name='faceted_search', to='page.Property')),
                ('repository_query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.Repository')),
            ],
            options={
                'verbose_name': 'Graph Timeline',
                'verbose_name_plural': 'Graph Timelines',
            },
        ),
        migrations.AddField(
            model_name='property',
            name='repository_query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.Repository'),
        ),
        migrations.AddField(
            model_name='forcegraph',
            name='faceted_search',
            field=models.ManyToManyField(to='page.Property'),
        ),
        migrations.AddField(
            model_name='forcegraph',
            name='repository_query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.Repository'),
        ),
        migrations.AddField(
            model_name='domain',
            name='repository_query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page.Repository'),
        ),
    ]
